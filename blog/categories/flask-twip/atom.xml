<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: flask_twip | xixitalk's snippet]]></title>
  <link href="http://xixitalk.github.io/blog/categories/flask-twip/atom.xml" rel="self"/>
  <link href="http://xixitalk.github.io/"/>
  <updated>2016-09-30T22:17:13+00:00</updated>
  <id>http://xixitalk.github.io/</id>
  <author>
    <name><![CDATA[xixitalk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[为flask_twip添加图片代理]]></title>
    <link href="http://xixitalk.github.io/blog/2013/02/17/flask-twip-proxy/"/>
    <updated>2013-02-17T11:31:00+00:00</updated>
    <id>http://xixitalk.github.io/blog/2013/02/17/flask-twip-proxy</id>
    <content type="html"><![CDATA[<h2 id="flasktwip">为flask_twip添加图片代理</h2>
<p>为flask_twip添加图片代理,理论上网页也可以，但网页只抓取第一层。<br />
demo参见<a href="https://xinhuanet.herokuapp.com/twip/getimg">https://xinhuanet.herokuapp.com/twip/getimg</a></p>

<!--more-->

<h3 id="import-urllib2">1、import urllib2</h3>
<p>在文件twip.py里增加import urllib2</p>

<pre><code>import urllib2
</code></pre>

<h3 id="twipgetimg">2、增加/twip/getimg路径映射</h3>
<p>在twip.py文件的函数getMapper里增加/twip/getimg路径映射</p>

<pre><code>('/getimg/',self.getimg),
</code></pre>

<h3 id="getimg">3、增加getimg函数</h3>
<p>在文件twip.py里twip类增加getimg函数，代码参见<a href="https://gist.github.com/xixitalk/4969986">https://gist.github.com/xixitalk/4969986</a>  </p>

<script src="https://gist.github.com/xixitalk/4969986.js"></script>

<h3 id="httpsyourappherokuappcomtwipgetimg">4、浏览器访问https://YOURAPP.herokuapp.com/twip/getimg</h3>
<p>访问https://YOURAPP.herokuapp.com/twip/getimg，输入图片地址或者网页地址即可。</p>

<h3 id="section">5、客户端使用</h3>
<p>如果客户端获取图片的时候把不能访问的图片地址（以BLOCKEDIMGURL为例）以参数imgurl形式传给https://YOURAPP.herokuapp.com/twip/getimg就可以直接在客户端查看图片了。
	https://YOURAPP.herokuapp.com/twip/getimg?imgurl=BLOCKEDIMGURL</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[flask_twip在heroku上搭建教程]]></title>
    <link href="http://xixitalk.github.io/blog/2012/11/23/flask-twip-on-heroku/"/>
    <updated>2012-11-23T21:01:00+00:00</updated>
    <id>http://xixitalk.github.io/blog/2012/11/23/flask-twip-on-heroku</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/yegle/flask_twip">flask_twip</a>是@<a href="http://twitter.com/yegle">yegle</a>写的一个可以搭建在<a href="http://www.heroku.com/">heroku</a>上的一个<a href="http://code.google.com/p/twip/">twip</a>的port程序。</p>

<!--more-->

<p>本教程使用的flask_twip-0.0.1版本，保存的OAuth是临时文件会丢失，而最新的flask_twip已经使用数据库保存不会丢失。详细参见@<a href="http://twitter.com/xmchenyj">xmchenyj</a>的教程：<a href="http://xmchenyj.wordpress.com/2013/01/24/%E9%80%9A%E8%BF%87ubuntu-12-04-lts%E5%9C%A8heroku%E4%B8%8A%E9%83%A8%E7%BD%B2flask_twip/">http://xmchenyj.wordpress.com/2013/01/24/%E9%80%9A%E8%BF%87ubuntu-12-04-lts%E5%9C%A8heroku%E4%B8%8A%E9%83%A8%E7%BD%B2flask_twip/</a></p>

<p>补充说明：@xmchenyj的教程在git init和git add .之前缺少建一个.gitignore文件，文件内容如下，表示venv目录和pyc文件不上传git服务器,这样和他教程结尾的备注才一致。</p>

<pre><code>venv
*.pyc
</code></pre>

<p>2013-2-22 更新</p>
]]></content>
  </entry>
  
</feed>
